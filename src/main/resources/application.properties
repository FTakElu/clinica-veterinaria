#spring.datasource.url=jdbc:postgresql://localhost:5432/clinicadb
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.username=postegres
#spring.datasource.password=456456
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true # Útil para depuração, mostra as queries SQL no console
#spring.jpa.properties.hibernate.format_sql=true # Formata as queries SQL no console

# Configurações de Security (se estiver usando, como no exemplo anterior)
# spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/your-realm

# H2 Database Configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

spring.datasource.url=jdbc:h2:mem:clinicadb;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# JPA (Hibernate) DDL-Auto Configuration
# 'update' tenta atualizar o schema existente
# 'create' cria um novo schema a cada reinício (perde dados anteriores)
# 'create-drop' cria e dropa o schema ao fechar a aplicação
# 'none' não faz nenhuma alteração no schema
spring.jpa.hibernate.ddl-auto=update
# Secret Key for JWT Token Generation and Validation
api.security.token.secret=your-jwt-secret-key-very-secret-and-long-enough-for-security